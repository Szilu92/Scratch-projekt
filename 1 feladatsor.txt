-- 1 Egyszerű lekérdezések:

	-- 1. Feladat
	-- Listázza ki a 20-as részleg dolgozóinak nevét, belépési idejét a nevek szerint csökkenően rendezve.
        
            SELECT 
                concat(concat(first_name,' '),last_name) AS "Dolgozói név",
                hire_date AS Belépés_ideje
            FROM hr.employees
            WHERE department_id=20
            ORDER BY "Dolgozói név" DESC;
    
	-- 2. Feladat
	-- Készítsen  két  listát, melyek  a  dolgozók  adatait  tartalmazzák. Az  egyiket  a  fizetés  szerint 
	-- növekvően, a másikat a fizetés szerint csökkenően rendezze. 
    
    
            SELECT
                * 
            FROM hr.employees
            ORDER BY salary;
            
            SELECT
                * 
            FROM hr.employees
            ORDER BY salary DESC;
    
	
	-- 3. Feladat
	-- Listázza  ki  a  dolgozók  nevét,  fizetést,  jövedelmét  a  jövedelmük  szerint  csökkenően 
	-- rendezve. (A jövedelem a fizetés és a jutalék összege.) 
      
            SELECT 
                concat(concat(first_name,' '),last_name) AS "Dolgozói név",
                salary AS Fizetés,
                salary*(1+NVL(commission_pct,0)) AS Jövedelem
            FROM hr.employees
            ORDER BY Jövedelem DESC;
            
             SELECT 
                first_name||' '||last_name AS "Dolgozói név",
                salary AS Fizetés,
                salary*(1+NVL(commission_pct,0)) AS Jövedelem
            FROM hr.employees
            ORDER BY Jövedelem DESC;
            
	-- 4. Feladat
	-- Listázza  ki  a  dolgozók  nevét,  részleg azonosítójukat,  jövedelmüket,  és  az  adójukat  (a  jövedelmük 
	-- 20%-a), az adójuk szerint csökkenően, a nevük szerint pedig növekvő módon rendezve. 
            SELECT
                first_name||' '||last_name AS Dolgozó_neve,
                department_id AS "Részleg azonosító",
                salary*(1+NVL(commission_pct,0)) AS Jövedelem,
                salary*(1+NVL(commission_pct,0))*0.2 AS "Adó" 
            FROM hr.employees
            ORDER BY "Adó" DESC, Dolgozó_neve;
    
    -- 5. Feladat
	-- Írassa  ki  azon  alkalmazottak  nevét,  munkakörének azonosítóját  és  fizetését,  akiknek  fizetése  nincs  az 
	-- 6000-12000 USD tartományban. A lista fejléce legyen ”Név”, ”Munkakör azonosító”, ”Fizetés”. . 
	
            SELECT 
                first_name||' '||last_name AS "Név",
                salary AS Fizetés,
                job_id AS "Munkakör azonosító"  
            FROM hr.employees
            WHERE salary<6000 OR salary>12000;
            
            SELECT 
                concat(concat(first_name,' '),last_name) AS "Név",
                salary AS Fizetés,
                job_id AS "Munkakör azonosító"  
            FROM hr.employees
            WHERE salary NOT BETWEEN 6000 AND 12000;
    
	-- -- 6. Feladat
	-- Írassa ki azon dolgozók nevét, munkakör-azonosítóját, fizetését, jutalékát és részleg-azonosítóját, akik 
	-- 1000 USD-nál  többet  keresnek,  és  2002.  március  1.  és  szeptember  30.  között 
	-- léptek be a vállalathoz.  
           
		SELECT
			concat(concat(first_name,' '),last_name) AS Dolgozó_neve,
			job_id AS "Munkakör azonosító",
			salary AS  Fizetés,    
			salary*NVL(commission_pct,0) AS Jutalék,
			department_id AS "Részleg azonosító",
			hire_date    
		FROM hr.employees
		WHERE salary>10000 AND hire_date BETWEEN '02-MÁRC. -01' AND '02-SZEPT. -30' ;



        SELECT
			concat(concat(first_name,' '),last_name) AS Dolgozó_neve,
			job_id AS "Munkakör azonosító",
			salary AS  Fizetés,    
			salary*NVL(commission_pct,0) AS Jutalék,
			department_id AS "Részleg azonosító",
			hire_date    
		FROM hr.employees
		WHERE salary>10000 AND to_char(hire_date,'YY-MM-DD') BETWEEN '02-03-01' AND '02-09-30' ;

	-- 7. Feladat
	-- Írassa ki minden jutalékkal rendelkező alkalmazott nevét, jutalékát, főnökének azonosítóját. 
	-- Legyen a lista rendezett a főnök azonosítója, és az alkalmazottak neve szerint. 
	
		SELECT
			concat(concat(first_name,' '),last_name) AS Dolgozó_neve,
			salary*NVL(commission_pct,0) AS "Jutalék",
			manager_id "Fönök azonosító"                    
        FROM hr.employees
        WHERE commission_pct IS NOT NULL
        ORDER BY manager_id, Dolgozó_neve ;
    
    
	--	-- 8. Feladat
	-- Írassa  ki  azon  alkalmazottak  azonosítóját,  nevét,  foglalkozás azonosítóját,  fizetését  és  jutalékát, 
	-- akiknek jutaléka meghaladja a fizetésük 30%-át. 
	
    SELECT
        employee_id Azonosító,
        first_name||' '||last_name AS Dolgozó_neve,
        job_id AS "Munkakör azonosító",
        salary Fizetés,
        salary*NVL(commission_pct,0) AS Jutalék 
    FROM hr.employees
    WHERE salary*NVL(commission_pct,0) > salary*0.3;
        
	-- 9. Feladat
	-- Írja  ki  azon  dolgozók  nevét,  foglalkozás azonosítóját.  fizetését  és  belépési  dátumát,  akik  2002-ben 
	-- léptek be a vállalathoz. A lista legyen a belépési dátum szerint rendezve. 
        SELECT
          first_name||' '||last_name AS Dolgozó_neve,
          salary AS "Fizetés",
          hire_date AS Belépés_dátum,
          to_char(hire_date,'YYYY') AS év  
        FROM hr.employees
        where to_char(hire_date,'YYYY')='2002'
        order by hire_date ;
    
    
	-- 10. Feladat
	-- Listázza  azon  alkalmazottak  nevét,  foglalkozás azonosítóját,  jövedelmét,  akiknek  a  nevében  két  ”L” 
	-- betű  szerepel,  továbbá  vagy  a  30-as  részlegen  dolgozik,  vagy  a  főnökének  azonosítója 121. 

        SELECT 
            first_name||' '||last_name AS "Név",
            salary*(1+NVL(commission_pct,0) )AS jövedelem,
            job_id AS Mukakör_Azonosító,
            department_id,
            manager_id    
        FROM hr.employees
        WHERE 
            upper(first_name||' '||last_name) LIKE '%L%L%' AND
            ( department_id = 30 OR manager_id=121);

	-- 11. Feladat
	-- Listázza  ki  részlegazonosító  szerint  rendezve  a  "ST_CLERK"  és  a  "SA_MAN"  munkakör azonosítójú 
	-- dolgozók nevét,  éves fizetését és  részlegazonosítóját.

        SELECT
            first_name||' '||last_name AS Dolgozó_neve,
            job_id AS "Munkakör azonosító",
            12*salary Fizetés,
            department_id "Részleg azonosító"
        FROM hr.employees
        WHERE job_id ='ST_CLERK' OR job_id='SA_MAN';
        
        
        SELECT
            first_name||' '||last_name AS Dolgozó_neve,
            job_id AS "Munkakör azonosító",
            12*salary Fizetés,
            department_id "Részleg azonosító"
        FROM hr.employees
        WHERE job_id IN ('ST_CLERK', 'SA_MAN');
	
	-- 12. Feladat
	-- Listázza ki  az összes dolgozót oly módon, hogy  azoknál,  akik nem kapnak  jutalékot,  az  a 
	-- szöveg jelenjen meg, hogy ”Nincs jutalék”. A lista fejléce legyen azonosító, belépési dátum, 
	-- név, foglalkozás azonosító , jutalék. 
    
		SELECT 
			employee_id,
			concat(concat(first_name,' '),last_name) AS "Név",
			NVL(to_char(salary*commission_pct),'Nics jutalék') AS Jutalék,
			job_id AS Mukakör_Azonosító,
			hire_date Beléps_dátuma,
			job_id AS foglakozás_azonosító
		FROM hr.employees;
	
	-- 13. Feladat
	-- Listázza  ki  a  man  karaktersorozatot  tartalmazó munkakör azonosítójú munkakörben  dolgozók  nevét  és 
	-- munkakör azonosítóját, a munkakör azonosító  és a név szerint rendezve. 
	
        SELECT
            first_name||' '||last_name AS Dolgozó_neve,
            job_id AS "Munkakör azonosító"
        FROM hr.employees
        WHERE UPPER(job_id) LIKE '%MAN%'
        ORDER BY "Munkakör azonosító", Dolgozó_neve;
    
	-- 14. Feladat
	-- Listázza foglalkozás azonosító szerint csoportosítva azon dolgozók nevét, foglalkozás azonosítóját, jövedelmét és 
	-- részlegének a kódját, akiknek jövedelme kisebb 12000 USD-nál, valamint 2002 és 2003 között léptek be.
    -- A keletkezett  lista  elsődlegesen  a  foglalkozás azonosító,  másodlagosan  a  dolgozó  neve  szerint legyen rendezve. 
	
        SELECT
            first_name||' '||last_name AS Dolgozó_neve,
            job_id AS "Foglalkozás azonosító",
            salary*(1+NVL(commission_pct,0) )AS jövedelem,
            department_id "Részleg azonosító"
        FROM hr.employees
        WHERE salary<12000 AND TO_CHAR(hire_date,'YYYY') IN('2002','2003')
        ORDER BY job_id, Dolgozó_neve;
    
	-- 15. Feladat
	-- Listázza  ki  azoknak  az  alkalmazottaknak  a  nevét,  éves  fizetését  és  a  munkában  eltöltött 
	-- hónapjainak  számát,  akik  2002.05.01.  előtt  léptek  be  a  vállalathoz.  A  lista  legyen  a 
	-- hónapszámok szerint csökkenően rendezve. 
    
    SELECT 
        first_name||' '|| last_name as Név,
        12*salary Éves_fizu,
        TRUNC((sysdate-hire_date)/365.25*12) honap,
        TRUNC(MONTHS_BETWEEN(sysdate,hire_date)) honap2    
    FROM hr.employees
    WHERE TO_CHAR(hire_date,'YYYY.MM.DD') < '2004.05.01'
    ORDER BY honap DESC;
    

	-- 16. Feladat
	-- Listázza  ki  a A  és  az M  betűvel  kezdődő  foglalkozás azonosítójú alkalmazottak  nevét  (nevüket  nagy 
	-- betűvel  kezdve  és  kisbetűvel  folytatva),  valamint  nevük  hosszát.  Rendezze  a  listát  a 
	-- foglalkozás azonosító szerint.
	
    SELECT 
        INITCAP(first_name)||' '|| INITCAP(last_name) as Név,
        LENGTH( first_name||' '|| last_name) hossz
    FROM hr.employees
    WHERE job_id LIKE 'A%' OR job_id LIKE 'M%'
    ORDER BY job_id;
  
  	-- 17. Feladat
	-- A  belépési  dátum  napjai  szerint  csoportosítva  listázza  azon  dolgozók  azonosítóját,  nevét, 
	-- jövedelmét,  munkába  állásuk  napját,  részlegének azonosítóját,  akiknek  jövedelme  10000  és  20000  USD 
	-- közötti  érték.  A  keletkezett  lista  elsődlegesen  a  napok  sorszáma  szerint, másodlagosan  a 
	-- dolgozó neve szerint legyen rendezve. A hét első napja legyen a vasárnap. 
    
    
    SELECT 
			employee_id Azonosító,
			concat(concat(first_name,' '),last_name) AS "Név",
			salary*(1+NVL(commission_pct,0) )AS jövedelem,
			TO_CHAR(hire_date,'DAY') Belépés_napja,	
            --TO_CHAR(hire_date+1,'d') sorszam	
            department_id Részleg
		FROM hr.employees
        WHERE salary BETWEEN 10000 AND 20000
        ORDER BY TO_CHAR(hire_date+1,'d'), "Név" ;
	
	-- 18. Feladat
	-- A vállalatnál  hűségjutalmat  adnak,  és  ehhez  szükséges  azon  dolgozók  azonosítója,  neve, 
	-- fizetése, munkában eltöltött éve, akik legalább 15 éve álltak munkába. Rendezze a listát a 
	-- munkában eltöltött évek szerint csökkenően, valamint az azonosító szerint növekvően. 
  
    SELECT
        employee_id Azonosító,
        first_name||' '|| last_name as Név,
        salary Fizetés,
        TRUNC(MONTHS_BETWEEN(sysdate,hire_date)/12) Évek        
    FROM hr.employees
    WHERE TRUNC(MONTHS_BETWEEN(sysdate,hire_date)/12) >=15
    ORDER BY Évek DESC, Azonosító ;
  
	
